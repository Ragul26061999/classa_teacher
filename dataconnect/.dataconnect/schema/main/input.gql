"""
✨ `Chapter_KeyOutput` returns the primary key fields of table type `Chapter`.

It has the same format as `Chapter_Key`, but is only used as mutation return value.
"""
scalar Chapter_KeyOutput
"""
✨ `Class_KeyOutput` returns the primary key fields of table type `Class`.

It has the same format as `Class_Key`, but is only used as mutation return value.
"""
scalar Class_KeyOutput
"""
✨ `ClassSubject_KeyOutput` returns the primary key fields of table type `ClassSubject`.

It has the same format as `ClassSubject_Key`, but is only used as mutation return value.
"""
scalar ClassSubject_KeyOutput
"""
✨ `Lesson_KeyOutput` returns the primary key fields of table type `Lesson`.

It has the same format as `Lesson_Key`, but is only used as mutation return value.
"""
scalar Lesson_KeyOutput
"""
✨ `School_KeyOutput` returns the primary key fields of table type `School`.

It has the same format as `School_Key`, but is only used as mutation return value.
"""
scalar School_KeyOutput
"""
✨ `Subject_KeyOutput` returns the primary key fields of table type `Subject`.

It has the same format as `Subject_Key`, but is only used as mutation return value.
"""
scalar Subject_KeyOutput
"""
✨ `Teacher_KeyOutput` returns the primary key fields of table type `Teacher`.

It has the same format as `Teacher_Key`, but is only used as mutation return value.
"""
scalar Teacher_KeyOutput
"""
✨ `TeacherClass_KeyOutput` returns the primary key fields of table type `TeacherClass`.

It has the same format as `TeacherClass_Key`, but is only used as mutation return value.
"""
scalar TeacherClass_KeyOutput
"""
✨ `TeacherSubject_KeyOutput` returns the primary key fields of table type `TeacherSubject`.

It has the same format as `TeacherSubject_Key`, but is only used as mutation return value.
"""
scalar TeacherSubject_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'Chapter'. It includes all necessary fields for creating or upserting rows into table.
"""
input Chapter_Data {
  """
  ✨ Generated from Field `Chapter`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Chapter`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Chapter`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Chapter`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Chapter`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `Chapter`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `Chapter`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `Chapter`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
  """
  ✨ Generated from Field `Chapter`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Chapter`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `Chapter`.`subject` of type `Subject!`
  """
  subject: Subject_Key
  """
  ✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Chapter`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Chapter`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Chapter`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Chapter`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Chapter`.`orderIndex` of type `Int`
  """
  orderIndex: Int
  """
  ✨ `_expr` server value variant of `orderIndex` (✨ Generated from Field `Chapter`.`orderIndex` of type `Int`)
  """
  orderIndex_expr: Int_Expr
  """
  ✨ `_update` server value variant of `orderIndex` (✨ Generated from Field `Chapter`.`orderIndex` of type `Int`)
  """
  orderIndex_update: [Int_Update!]
  """
  ✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Chapter'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Chapter_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Chapter_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Chapter_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Chapter_Filter!]
  """
  ✨ Generated from Field `Chapter`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Chapter`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Chapter`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `Chapter`.`subjectId` of type `UUID!`
  """
  subjectId: UUID_Filter
  """
  ✨ Generated from Field `Chapter`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Chapter`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `Chapter`.`subject` of type `Subject!`
  """
  subject: Subject_Filter
  """
  ✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Chapter`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Chapter`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex` of type `Int`
  """
  orderIndex: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Chapter`.`lessons_on_chapter` of type `[Lesson!]!`
  """
  lessons_on_chapter: Lesson_ListFilter
}
"""
✨ Generated first-row input type for table 'Chapter'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Chapter_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Chapter_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Chapter_Filter
}
"""
✨ Generated having input type for table 'Chapter'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Chapter_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Chapter_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Chapter_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Chapter_Having!]
  """
  ✨ Generated from Field `Chapter`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`subjectId_count` of type `Int!`
  """
  subjectId_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: Float_Filter
  """
  ✨ Generated from Field `Chapter`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Chapter`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Chapter`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: Int_Filter
  """
  ✨ Generated from Field `Chapter`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Chapter'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Chapter_Key {
  """
  ✨ Generated from Field `Chapter`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Chapter`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Chapter'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Chapter_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Chapter_Filter
}
"""
✨ Generated order input type for table 'Chapter'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Chapter_Order {
  """
  ✨ Generated from Field `Chapter`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`subjectId` of type `UUID!`
  """
  subjectId: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Chapter`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `Chapter`.`subject` of type `Subject!`
  """
  subject: Subject_Order
  """
  ✨ Generated from Field `Chapter`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`orderIndex` of type `Int`
  """
  orderIndex: OrderDirection
  """
  ✨ Generated from Field `Chapter`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'Class'. It includes all necessary fields for creating or upserting rows into table.
"""
input Class_Data {
  """
  ✨ Generated from Field `Class`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Class`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Class`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Class`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Class`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `Class`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `Class`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Class`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Class`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Class`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Class'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Class_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Class_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Class_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Class_Filter!]
  """
  ✨ Generated from Field `Class`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Class`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Class`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `Class`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Class`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Class`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Class`.`classSubjects_on_class` of type `[ClassSubject!]!`
  """
  classSubjects_on_class: ClassSubject_ListFilter
  """
  ✨ Generated from Field `Class`.`teacherClasses_on_class` of type `[TeacherClass!]!`
  """
  teacherClasses_on_class: TeacherClass_ListFilter
  """
  ✨ Generated from Field `Class`.`subjects_via_ClassSubject` of type `[Subject!]!`
  """
  subjects_via_ClassSubject: Subject_ListFilter
  """
  ✨ Generated from Field `Class`.`teachers_via_TeacherClass` of type `[Teacher!]!`
  """
  teachers_via_TeacherClass: Teacher_ListFilter
}
"""
✨ Generated first-row input type for table 'Class'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Class_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Class_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Class_Filter
}
"""
✨ Generated having input type for table 'Class'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Class_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Class_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Class_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Class_Having!]
  """
  ✨ Generated from Field `Class`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Class`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Class`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Class`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Class`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Class`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Class'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Class_Key {
  """
  ✨ Generated from Field `Class`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Class`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Class'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Class_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Class_Filter
}
"""
✨ Generated order input type for table 'Class'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Class_Order {
  """
  ✨ Generated from Field `Class`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Class`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Class`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `Class`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Class`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `Class`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Class`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Class`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'ClassSubject'. It includes all necessary fields for creating or upserting rows into table.
"""
input ClassSubject_Data {
  """
  ✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`
  """
  classId: UUID
  """
  ✨ `_expr` server value variant of `classId` (✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`)
  """
  classId_expr: UUID_Expr
  """
  ✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
  """
  ✨ Generated from Field `ClassSubject`.`class` of type `Class!`
  """
  class: Class_Key
  """
  ✨ Generated from Field `ClassSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Key
  """
  ✨ Generated from Field `ClassSubject`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `ClassSubject`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `ClassSubject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `ClassSubject`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `ClassSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `ClassSubject`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'ClassSubject'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ClassSubject_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ClassSubject_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ClassSubject_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ClassSubject_Filter!]
  """
  ✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`
  """
  classId: UUID_Filter
  """
  ✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID_Filter
  """
  ✨ Generated from Field `ClassSubject`.`class` of type `Class!`
  """
  class: Class_Filter
  """
  ✨ Generated from Field `ClassSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `ClassSubject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `ClassSubject`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'ClassSubject'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ClassSubject_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ClassSubject_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ClassSubject_Filter
}
"""
✨ Generated having input type for table 'ClassSubject'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ClassSubject_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ClassSubject_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ClassSubject_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ClassSubject_Having!]
  """
  ✨ Generated from Field `ClassSubject`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`classId_count` of type `Int!`
  """
  classId_count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`subjectId_count` of type `Int!`
  """
  subjectId_count: Int_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ClassSubject`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'ClassSubject'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ClassSubject_Key {
  """
  ✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`
  """
  classId: UUID
  """
  ✨ `_expr` server value variant of `classId` (✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`)
  """
  classId_expr: UUID_Expr
  """
  ✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ClassSubject'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ClassSubject_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ClassSubject_Filter
}
"""
✨ Generated order input type for table 'ClassSubject'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ClassSubject_Order {
  """
  ✨ Generated from Field `ClassSubject`.`classId` of type `UUID!`
  """
  classId: OrderDirection
  """
  ✨ Generated from Field `ClassSubject`.`subjectId` of type `UUID!`
  """
  subjectId: OrderDirection
  """
  ✨ Generated from Field `ClassSubject`.`class` of type `Class!`
  """
  class: Class_Order
  """
  ✨ Generated from Field `ClassSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Order
  """
  ✨ Generated from Field `ClassSubject`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `ClassSubject`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `ClassSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `ClassSubject`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `ClassSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'Lesson'. It includes all necessary fields for creating or upserting rows into table.
"""
input Lesson_Data {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Lesson`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`chapterId` of type `UUID!`
  """
  chapterId: UUID
  """
  ✨ `_expr` server value variant of `chapterId` (✨ Generated from Field `Lesson`.`chapterId` of type `UUID!`)
  """
  chapterId_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Lesson`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `Lesson`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `Lesson`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`chapter` of type `Chapter!`
  """
  chapter: Chapter_Key
  """
  ✨ Generated from Field `Lesson`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Lesson`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `Lesson`.`subject` of type `Subject!`
  """
  subject: Subject_Key
  """
  ✨ Generated from Field `Lesson`.`content` of type `String`
  """
  content: String
  """
  ✨ `_expr` server value variant of `content` (✨ Generated from Field `Lesson`.`content` of type `String`)
  """
  content_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Lesson`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Lesson`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int`
  """
  orderIndex: Int
  """
  ✨ `_expr` server value variant of `orderIndex` (✨ Generated from Field `Lesson`.`orderIndex` of type `Int`)
  """
  orderIndex_expr: Int_Expr
  """
  ✨ `_update` server value variant of `orderIndex` (✨ Generated from Field `Lesson`.`orderIndex` of type `Int`)
  """
  orderIndex_update: [Int_Update!]
  """
  ✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Lesson'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Lesson_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Lesson_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Lesson_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Lesson_Filter!]
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`chapterId` of type `UUID!`
  """
  chapterId: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Lesson`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`subjectId` of type `UUID!`
  """
  subjectId: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`chapter` of type `Chapter!`
  """
  chapter: Chapter_Filter
  """
  ✨ Generated from Field `Lesson`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Lesson`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `Lesson`.`subject` of type `Subject!`
  """
  subject: Subject_Filter
  """
  ✨ Generated from Field `Lesson`.`content` of type `String`
  """
  content: String_Filter
  """
  ✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Lesson`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int`
  """
  orderIndex: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Lesson'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Lesson_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Lesson_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Lesson_Filter
}
"""
✨ Generated having input type for table 'Lesson'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Lesson_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Lesson_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Lesson_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Lesson_Having!]
  """
  ✨ Generated from Field `Lesson`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`chapterId_count` of type `Int!`
  """
  chapterId_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`content_count` of type `Int!`
  """
  content_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`subjectId_count` of type `Int!`
  """
  subjectId_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: Float_Filter
  """
  ✨ Generated from Field `Lesson`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Lesson`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Lesson'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Lesson_Key {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Lesson`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Lesson'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Lesson_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Lesson_Filter
}
"""
✨ Generated order input type for table 'Lesson'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Lesson_Order {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`chapterId` of type `UUID!`
  """
  chapterId: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`subjectId` of type `UUID!`
  """
  subjectId: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`chapter` of type `Chapter!`
  """
  chapter: Chapter_Order
  """
  ✨ Generated from Field `Lesson`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Lesson`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `Lesson`.`subject` of type `Subject!`
  """
  subject: Subject_Order
  """
  ✨ Generated from Field `Lesson`.`content` of type `String`
  """
  content: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int`
  """
  orderIndex: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'School'. It includes all necessary fields for creating or upserting rows into table.
"""
input School_Data {
  """
  ✨ Generated from Field `School`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `School`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `School`.`branchAdminId` of type `String`
  """
  branchAdminId: String
  """
  ✨ `_expr` server value variant of `branchAdminId` (✨ Generated from Field `School`.`branchAdminId` of type `String`)
  """
  branchAdminId_expr: String_Expr
  """
  ✨ Generated from Field `School`.`mainAdminId` of type `String!`
  """
  mainAdminId: String
  """
  ✨ `_expr` server value variant of `mainAdminId` (✨ Generated from Field `School`.`mainAdminId` of type `String!`)
  """
  mainAdminId_expr: String_Expr
  """
  ✨ Generated from Field `School`.`mainBranchId` of type `UUID`
  """
  mainBranchId: UUID
  """
  ✨ `_expr` server value variant of `mainBranchId` (✨ Generated from Field `School`.`mainBranchId` of type `UUID`)
  """
  mainBranchId_expr: UUID_Expr
  """
  ✨ Generated from Field `School`.`branchAdmin` of type `User`
  """
  branchAdmin: User_Key
  """
  ✨ Generated from Field `School`.`mainAdmin` of type `User!`
  """
  mainAdmin: User_Key
  """
  ✨ Generated from Field `School`.`mainBranch` of type `School`
  """
  mainBranch: School_Key
  """
  ✨ Generated from Field `School`.`address` of type `String`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `School`.`address` of type `String`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `School`.`contact` of type `String`
  """
  contact: String
  """
  ✨ `_expr` server value variant of `contact` (✨ Generated from Field `School`.`contact` of type `String`)
  """
  contact_expr: String_Expr
  """
  ✨ Generated from Field `School`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `School`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `School`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `School`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `School`.`isBranch` of type `Boolean`
  """
  isBranch: Boolean
  """
  ✨ `_expr` server value variant of `isBranch` (✨ Generated from Field `School`.`isBranch` of type `Boolean`)
  """
  isBranch_expr: Boolean_Expr
  """
  ✨ Generated from Field `School`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `School`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'School'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input School_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [School_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: School_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [School_Filter!]
  """
  ✨ Generated from Field `School`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `School`.`branchAdminId` of type `String`
  """
  branchAdminId: String_Filter
  """
  ✨ Generated from Field `School`.`mainAdminId` of type `String!`
  """
  mainAdminId: String_Filter
  """
  ✨ Generated from Field `School`.`mainBranchId` of type `UUID`
  """
  mainBranchId: UUID_Filter
  """
  ✨ Generated from Field `School`.`branchAdmin` of type `User`
  """
  branchAdmin: User_Filter
  """
  ✨ Generated from Field `School`.`mainAdmin` of type `User!`
  """
  mainAdmin: User_Filter
  """
  ✨ Generated from Field `School`.`mainBranch` of type `School`
  """
  mainBranch: School_Filter
  """
  ✨ Generated from Field `School`.`address` of type `String`
  """
  address: String_Filter
  """
  ✨ Generated from Field `School`.`contact` of type `String`
  """
  contact: String_Filter
  """
  ✨ Generated from Field `School`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `School`.`isBranch` of type `Boolean`
  """
  isBranch: Boolean_Filter
  """
  ✨ Generated from Field `School`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `School`.`chapters_on_school` of type `[Chapter!]!`
  """
  chapters_on_school: Chapter_ListFilter
  """
  ✨ Generated from Field `School`.`classes_on_school` of type `[Class!]!`
  """
  classes_on_school: Class_ListFilter
  """
  ✨ Generated from Field `School`.`classSubjects_on_school` of type `[ClassSubject!]!`
  """
  classSubjects_on_school: ClassSubject_ListFilter
  """
  ✨ Generated from Field `School`.`lessons_on_school` of type `[Lesson!]!`
  """
  lessons_on_school: Lesson_ListFilter
  """
  ✨ Generated from Field `School`.`schools_on_mainBranch` of type `[School!]!`
  """
  schools_on_mainBranch: School_ListFilter
  """
  ✨ Generated from Field `School`.`subjects_on_school` of type `[Subject!]!`
  """
  subjects_on_school: Subject_ListFilter
  """
  ✨ Generated from Field `School`.`teachers_on_school` of type `[Teacher!]!`
  """
  teachers_on_school: Teacher_ListFilter
  """
  ✨ Generated from Field `School`.`teacherClasses_on_school` of type `[TeacherClass!]!`
  """
  teacherClasses_on_school: TeacherClass_ListFilter
  """
  ✨ Generated from Field `School`.`teacherSubjects_on_school` of type `[TeacherSubject!]!`
  """
  teacherSubjects_on_school: TeacherSubject_ListFilter
}
"""
✨ Generated first-row input type for table 'School'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input School_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [School_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: School_Filter
}
"""
✨ Generated having input type for table 'School'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input School_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [School_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: School_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [School_Having!]
  """
  ✨ Generated from Field `School`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `School`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `School`.`branchAdminId_count` of type `Int!`
  """
  branchAdminId_count: Int_Filter
  """
  ✨ Generated from Field `School`.`contact_count` of type `Int!`
  """
  contact_count: Int_Filter
  """
  ✨ Generated from Field `School`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `School`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `School`.`isBranch_count` of type `Int!`
  """
  isBranch_count: Int_Filter
  """
  ✨ Generated from Field `School`.`mainAdminId_count` of type `Int!`
  """
  mainAdminId_count: Int_Filter
  """
  ✨ Generated from Field `School`.`mainBranchId_count` of type `Int!`
  """
  mainBranchId_count: Int_Filter
  """
  ✨ Generated from Field `School`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `School`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `School`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `School`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `School`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `School`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'School'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input School_Key {
  """
  ✨ Generated from Field `School`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `School`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'School'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input School_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: School_Filter
}
"""
✨ Generated order input type for table 'School'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input School_Order {
  """
  ✨ Generated from Field `School`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `School`.`branchAdminId` of type `String`
  """
  branchAdminId: OrderDirection
  """
  ✨ Generated from Field `School`.`mainAdminId` of type `String!`
  """
  mainAdminId: OrderDirection
  """
  ✨ Generated from Field `School`.`mainBranchId` of type `UUID`
  """
  mainBranchId: OrderDirection
  """
  ✨ Generated from Field `School`.`branchAdmin` of type `User`
  """
  branchAdmin: User_Order
  """
  ✨ Generated from Field `School`.`mainAdmin` of type `User!`
  """
  mainAdmin: User_Order
  """
  ✨ Generated from Field `School`.`mainBranch` of type `School`
  """
  mainBranch: School_Order
  """
  ✨ Generated from Field `School`.`address` of type `String`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `School`.`contact` of type `String`
  """
  contact: OrderDirection
  """
  ✨ Generated from Field `School`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `School`.`isBranch` of type `Boolean`
  """
  isBranch: OrderDirection
  """
  ✨ Generated from Field `School`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `School`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'Subject'. It includes all necessary fields for creating or upserting rows into table.
"""
input Subject_Data {
  """
  ✨ Generated from Field `Subject`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Subject`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Subject`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Subject`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Subject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `Subject`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `Subject`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Subject`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Subject`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Subject`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Subject`.`image` of type `String`
  """
  image: String
  """
  ✨ `_expr` server value variant of `image` (✨ Generated from Field `Subject`.`image` of type `String`)
  """
  image_expr: String_Expr
  """
  ✨ Generated from Field `Subject`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Subject`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Subject'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Subject_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Subject_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Subject_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Subject_Filter!]
  """
  ✨ Generated from Field `Subject`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Subject`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Subject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `Subject`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Subject`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Subject`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Subject`.`image` of type `String`
  """
  image: String_Filter
  """
  ✨ Generated from Field `Subject`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Subject`.`chapters_on_subject` of type `[Chapter!]!`
  """
  chapters_on_subject: Chapter_ListFilter
  """
  ✨ Generated from Field `Subject`.`classSubjects_on_subject` of type `[ClassSubject!]!`
  """
  classSubjects_on_subject: ClassSubject_ListFilter
  """
  ✨ Generated from Field `Subject`.`lessons_on_subject` of type `[Lesson!]!`
  """
  lessons_on_subject: Lesson_ListFilter
  """
  ✨ Generated from Field `Subject`.`teacherSubjects_on_subject` of type `[TeacherSubject!]!`
  """
  teacherSubjects_on_subject: TeacherSubject_ListFilter
  """
  ✨ Generated from Field `Subject`.`classes_via_ClassSubject` of type `[Class!]!`
  """
  classes_via_ClassSubject: Class_ListFilter
  """
  ✨ Generated from Field `Subject`.`teachers_via_TeacherSubject` of type `[Teacher!]!`
  """
  teachers_via_TeacherSubject: Teacher_ListFilter
}
"""
✨ Generated first-row input type for table 'Subject'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Subject_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Subject_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Subject_Filter
}
"""
✨ Generated having input type for table 'Subject'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Subject_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Subject_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Subject_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Subject_Having!]
  """
  ✨ Generated from Field `Subject`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`image_count` of type `Int!`
  """
  image_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Subject`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Subject`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Subject`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Subject`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Subject'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Subject_Key {
  """
  ✨ Generated from Field `Subject`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Subject`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Subject'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Subject_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Subject_Filter
}
"""
✨ Generated order input type for table 'Subject'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Subject_Order {
  """
  ✨ Generated from Field `Subject`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Subject`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Subject`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `Subject`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Subject`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `Subject`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Subject`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Subject`.`image` of type `String`
  """
  image: OrderDirection
  """
  ✨ Generated from Field `Subject`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Subject`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'Teacher'. It includes all necessary fields for creating or upserting rows into table.
"""
input Teacher_Data {
  """
  ✨ Generated from Field `Teacher`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Teacher`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Teacher`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Teacher`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Teacher`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `Teacher`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `Teacher`.`userId` of type `String!`
  """
  userId: String
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Teacher`.`userId` of type `String!`)
  """
  userId_expr: String_Expr
  """
  ✨ Generated from Field `Teacher`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Teacher`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `Teacher`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Teacher`.`teacherId` of type `String!`
  """
  teacherId: String
  """
  ✨ `_expr` server value variant of `teacherId` (✨ Generated from Field `Teacher`.`teacherId` of type `String!`)
  """
  teacherId_expr: String_Expr
  """
  ✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Teacher'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Teacher_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Teacher_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Teacher_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Teacher_Filter!]
  """
  ✨ Generated from Field `Teacher`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Teacher`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Teacher`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `Teacher`.`userId` of type `String!`
  """
  userId: String_Filter
  """
  ✨ Generated from Field `Teacher`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Teacher`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `Teacher`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Teacher`.`teacherId` of type `String!`
  """
  teacherId: String_Filter
  """
  ✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Teacher`.`teacherClasses_on_teacher` of type `[TeacherClass!]!`
  """
  teacherClasses_on_teacher: TeacherClass_ListFilter
  """
  ✨ Generated from Field `Teacher`.`teacherSubjects_on_teacher` of type `[TeacherSubject!]!`
  """
  teacherSubjects_on_teacher: TeacherSubject_ListFilter
  """
  ✨ Generated from Field `Teacher`.`classes_via_TeacherClass` of type `[Class!]!`
  """
  classes_via_TeacherClass: Class_ListFilter
  """
  ✨ Generated from Field `Teacher`.`subjects_via_TeacherSubject` of type `[Subject!]!`
  """
  subjects_via_TeacherSubject: Subject_ListFilter
}
"""
✨ Generated first-row input type for table 'Teacher'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Teacher_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Teacher_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Teacher_Filter
}
"""
✨ Generated having input type for table 'Teacher'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Teacher_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Teacher_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Teacher_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Teacher_Having!]
  """
  ✨ Generated from Field `Teacher`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`teacherId_count` of type `Int!`
  """
  teacherId_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Teacher`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Teacher`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Teacher`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Teacher`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Teacher'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Teacher_Key {
  """
  ✨ Generated from Field `Teacher`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Teacher`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Teacher'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Teacher_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Teacher_Filter
}
"""
✨ Generated order input type for table 'Teacher'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Teacher_Order {
  """
  ✨ Generated from Field `Teacher`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`userId` of type `String!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Teacher`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `Teacher`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Teacher`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`teacherId` of type `String!`
  """
  teacherId: OrderDirection
  """
  ✨ Generated from Field `Teacher`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'TeacherClass'. It includes all necessary fields for creating or upserting rows into table.
"""
input TeacherClass_Data {
  """
  ✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`
  """
  teacherId: UUID
  """
  ✨ `_expr` server value variant of `teacherId` (✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`)
  """
  teacherId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`
  """
  classId: UUID
  """
  ✨ `_expr` server value variant of `classId` (✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`)
  """
  classId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherClass`.`class` of type `Class!`
  """
  class: Class_Key
  """
  ✨ Generated from Field `TeacherClass`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Key
  """
  ✨ Generated from Field `TeacherClass`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `TeacherClass`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `TeacherClass`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `TeacherClass`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherClass`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `TeacherClass`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'TeacherClass'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TeacherClass_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [TeacherClass_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: TeacherClass_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [TeacherClass_Filter!]
  """
  ✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`
  """
  teacherId: UUID_Filter
  """
  ✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`
  """
  classId: UUID_Filter
  """
  ✨ Generated from Field `TeacherClass`.`class` of type `Class!`
  """
  class: Class_Filter
  """
  ✨ Generated from Field `TeacherClass`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `TeacherClass`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `TeacherClass`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'TeacherClass'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input TeacherClass_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [TeacherClass_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: TeacherClass_Filter
}
"""
✨ Generated having input type for table 'TeacherClass'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TeacherClass_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [TeacherClass_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: TeacherClass_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [TeacherClass_Having!]
  """
  ✨ Generated from Field `TeacherClass`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`classId_count` of type `Int!`
  """
  classId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`teacherId_count` of type `Int!`
  """
  teacherId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `TeacherClass`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'TeacherClass'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input TeacherClass_Key {
  """
  ✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`
  """
  teacherId: UUID
  """
  ✨ `_expr` server value variant of `teacherId` (✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`)
  """
  teacherId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`
  """
  classId: UUID
  """
  ✨ `_expr` server value variant of `classId` (✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`)
  """
  classId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'TeacherClass'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input TeacherClass_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: TeacherClass_Filter
}
"""
✨ Generated order input type for table 'TeacherClass'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input TeacherClass_Order {
  """
  ✨ Generated from Field `TeacherClass`.`teacherId` of type `UUID!`
  """
  teacherId: OrderDirection
  """
  ✨ Generated from Field `TeacherClass`.`classId` of type `UUID!`
  """
  classId: OrderDirection
  """
  ✨ Generated from Field `TeacherClass`.`class` of type `Class!`
  """
  class: Class_Order
  """
  ✨ Generated from Field `TeacherClass`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Order
  """
  ✨ Generated from Field `TeacherClass`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `TeacherClass`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `TeacherClass`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `TeacherClass`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `TeacherClass`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'TeacherSubject'. It includes all necessary fields for creating or upserting rows into table.
"""
input TeacherSubject_Data {
  """
  ✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`
  """
  teacherId: UUID
  """
  ✨ `_expr` server value variant of `teacherId` (✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`)
  """
  teacherId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Key
  """
  ✨ Generated from Field `TeacherSubject`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Key
  """
  ✨ Generated from Field `TeacherSubject`.`createdById` of type `String!`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `TeacherSubject`.`createdById` of type `String!`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `TeacherSubject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID
  """
  ✨ `_expr` server value variant of `schoolId` (✨ Generated from Field `TeacherSubject`.`schoolId` of type `UUID!`)
  """
  schoolId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `TeacherSubject`.`school` of type `School!`
  """
  school: School_Key
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'TeacherSubject'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TeacherSubject_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [TeacherSubject_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: TeacherSubject_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [TeacherSubject_Filter!]
  """
  ✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`
  """
  teacherId: UUID_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdById` of type `String!`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`schoolId` of type `UUID!`
  """
  schoolId: UUID_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`school` of type `School!`
  """
  school: School_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'TeacherSubject'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input TeacherSubject_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [TeacherSubject_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: TeacherSubject_Filter
}
"""
✨ Generated having input type for table 'TeacherSubject'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TeacherSubject_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [TeacherSubject_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: TeacherSubject_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [TeacherSubject_Having!]
  """
  ✨ Generated from Field `TeacherSubject`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`schoolId_count` of type `Int!`
  """
  schoolId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`subjectId_count` of type `Int!`
  """
  subjectId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`teacherId_count` of type `Int!`
  """
  teacherId_count: Int_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'TeacherSubject'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input TeacherSubject_Key {
  """
  ✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`
  """
  teacherId: UUID
  """
  ✨ `_expr` server value variant of `teacherId` (✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`)
  """
  teacherId_expr: UUID_Expr
  """
  ✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`
  """
  subjectId: UUID
  """
  ✨ `_expr` server value variant of `subjectId` (✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`)
  """
  subjectId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'TeacherSubject'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input TeacherSubject_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: TeacherSubject_Filter
}
"""
✨ Generated order input type for table 'TeacherSubject'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input TeacherSubject_Order {
  """
  ✨ Generated from Field `TeacherSubject`.`teacherId` of type `UUID!`
  """
  teacherId: OrderDirection
  """
  ✨ Generated from Field `TeacherSubject`.`subjectId` of type `UUID!`
  """
  subjectId: OrderDirection
  """
  ✨ Generated from Field `TeacherSubject`.`subject` of type `Subject!`
  """
  subject: Subject_Order
  """
  ✨ Generated from Field `TeacherSubject`.`teacher` of type `Teacher!`
  """
  teacher: Teacher_Order
  """
  ✨ Generated from Field `TeacherSubject`.`createdById` of type `String!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `TeacherSubject`.`schoolId` of type `UUID!`
  """
  schoolId: OrderDirection
  """
  ✨ Generated from Field `TeacherSubject`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `TeacherSubject`.`school` of type `School!`
  """
  school: School_Order
  """
  ✨ Generated from Field `TeacherSubject`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`role` of type `String`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `User`.`role` of type `String`)
  """
  role_expr: String_Expr
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`role` of type `String`
  """
  role: String_Filter
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`chapters_on_createdBy` of type `[Chapter!]!`
  """
  chapters_on_createdBy: Chapter_ListFilter
  """
  ✨ Generated from Field `User`.`classes_on_createdBy` of type `[Class!]!`
  """
  classes_on_createdBy: Class_ListFilter
  """
  ✨ Generated from Field `User`.`classSubjects_on_createdBy` of type `[ClassSubject!]!`
  """
  classSubjects_on_createdBy: ClassSubject_ListFilter
  """
  ✨ Generated from Field `User`.`lessons_on_createdBy` of type `[Lesson!]!`
  """
  lessons_on_createdBy: Lesson_ListFilter
  """
  ✨ Generated from Field `User`.`schools_on_branchAdmin` of type `[School!]!`
  """
  schools_on_branchAdmin: School_ListFilter
  """
  ✨ Generated from Field `User`.`schools_on_mainAdmin` of type `[School!]!`
  """
  schools_on_mainAdmin: School_ListFilter
  """
  ✨ Generated from Field `User`.`subjects_on_createdBy` of type `[Subject!]!`
  """
  subjects_on_createdBy: Subject_ListFilter
  """
  ✨ Generated from Field `User`.`teachers_on_createdBy` of type `[Teacher!]!`
  """
  teachers_on_createdBy: Teacher_ListFilter
  """
  ✨ Generated from Field `User`.`teachers_on_user` of type `[Teacher!]!`
  """
  teachers_on_user: Teacher_ListFilter
  """
  ✨ Generated from Field `User`.`teacherClasses_on_createdBy` of type `[TeacherClass!]!`
  """
  teacherClasses_on_createdBy: TeacherClass_ListFilter
  """
  ✨ Generated from Field `User`.`teacherSubjects_on_createdBy` of type `[TeacherSubject!]!`
  """
  teacherSubjects_on_createdBy: TeacherSubject_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: Int_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`role` of type `String`
  """
  role: OrderDirection
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
